{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// ResetPassword.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { resetPasswordApi } from \"../apis/Api\";\nimport { toast } from \"react-toastify\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const handleNewPassword = e => {\n    setNewPassword(e.target.value);\n  };\n  const handleResetPassword = () => {\n    const data = {\n      password: newPassword\n    };\n    resetPasswordApi(data, token).then(res => {\n      if (res.data.success) {\n        toast.success(res.data.message);\n        // Redirect to the login page after successful password reset\n        navigate(\"/login\");\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.error(err);\n      toast.error(\"Internal server error\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-img3 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"lock-icon\",\n        children: \"\\uD83D\\uDD12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"fh2\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fp\",\n        children: \"Enter your new password below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"fpassInput\",\n        placeholder: \"Enter your new password\",\n        onChange: handleNewPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"fbutton\",\n        onClick: handleResetPassword,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"jEDTMMpG8xWcfC0PYdiITAZCfMI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","resetPasswordApi","toast","jsxDEV","_jsxDEV","ResetPassword","_s","navigate","token","newPassword","setNewPassword","handleNewPassword","e","target","value","handleResetPassword","data","password","then","res","success","message","error","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/ResetPassword.jsx"],"sourcesContent":["// ResetPassword.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { resetPasswordApi } from \"../apis/Api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./ResetPassword.css\";\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const handleNewPassword = (e) => {\r\n    setNewPassword(e.target.value);\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    const data = {\r\n      password: newPassword,\r\n    };\r\n\r\n    resetPasswordApi(data, token)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          toast.success(res.data.message);\r\n          // Redirect to the login page after successful password reset\r\n          navigate(\"/login\");\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        toast.error(\"Internal server error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"background-img3 d-flex justify-content-center\">\r\n    <div className=\"cardf\">\r\n      <h2 className=\"lock-icon\">&#x1F512;</h2>\r\n      <h2 className=\"fh2\">Reset Password</h2>\r\n      <p className=\"fp\">Enter your new password below:</p>\r\n      <input\r\n        type=\"password\"\r\n        className=\"fpassInput\"\r\n        placeholder=\"Enter your new password\"\r\n        onChange={handleNewPassword}\r\n      />\r\n      <button type=\"button\" className=\"fbutton\" onClick={handleResetPassword}>\r\n        Update Password\r\n      </button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}