{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\n// VerificationMessage.jsx\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { verifyEmail } from './API'; // Adjust the path based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationMessage = () => {\n  _s();\n  useEffect(() => {\n    const userId = '';\n    verifyEmail(userId).then(response => {\n      // Assuming the API returns { success: true } on successful verification\n      if (response.success) {\n        toast.success('Email has been verified!', {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 3000\n        });\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 3000);\n      } else {\n        toast.error('Email verification failed. Please try again.');\n      }\n    }).catch(error => {\n      console.error('Error verifying email:', error);\n      toast.error('An error occurred. Please try again later.');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email has been verified.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Go back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VerificationMessage;\nexport default VerificationMessage;\nvar _c;\n$RefreshReg$(_c, \"VerificationMessage\");","map":{"version":3,"names":["React","useEffect","Link","toast","verifyEmail","jsxDEV","_jsxDEV","VerificationMessage","_s","userId","then","response","success","position","POSITION","TOP_CENTER","autoClose","setTimeout","window","location","href","error","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["// VerificationMessage.jsx\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { verifyEmail } from './API'; // Adjust the path based on your file structure\r\n\r\nconst VerificationMessage = () => {\r\n  useEffect(() => {\r\n    const userId = '';\r\n    \r\n    verifyEmail(userId)\r\n      .then((response) => {\r\n        // Assuming the API returns { success: true } on successful verification\r\n        if (response.success) {\r\n          toast.success('Email has been verified!', {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 3000,\r\n          });\r\n\r\n          setTimeout(() => {\r\n            window.location.href = '/login';\r\n          }, 3000);\r\n        } else {\r\n          toast.error('Email verification failed. Please try again.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error verifying email:', error);\r\n        toast.error('An error occurred. Please try again later.');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"verification-message\">\r\n      <h2>Email has been verified.</h2>\r\n      <Link to=\"/login\">Go back to Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,WAAW,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCP,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAG,EAAE;IAEjBL,WAAW,CAACK,MAAM,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBT,KAAK,CAACS,OAAO,CAAC,0BAA0B,EAAE;UACxCC,QAAQ,EAAEV,KAAK,CAACW,QAAQ,CAACC,UAAU;UACnCC,SAAS,EAAE;QACb,CAAC,CAAC;QAEFC,UAAU,CAAC,MAAM;UACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QACjC,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACLjB,KAAK,CAACkB,KAAK,CAAC,8CAA8C,CAAC;MAC7D;IACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAK;MAChBE,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ClB,KAAK,CAACkB,KAAK,CAAC,4CAA4C,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA;MAAAmB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCvB,OAAA,CAACJ,IAAI;MAAC4B,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AAkCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}