{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\n// VerifyMessage.jsx\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyMessage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    // Call the verifyEmail API function when the component mounts\n    // Use the 'id' parameter from the URL\n    verifyEmail(id).then(response => {\n      console.log(response.data); // Handle the response as needed\n      // Show toast message or redirect to login\n    }).catch(error => {\n      console.error(error); // Handle errors\n      // Show error message or redirect to an error page\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyMessage, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = VerifyMessage;\nexport default VerifyMessage;\nvar _c;\n$RefreshReg$(_c, \"VerifyMessage\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","VerifyMessage","_s","id","verifyEmail","then","response","console","log","data","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["// VerifyMessage.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst VerifyMessage = () => {\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    // Call the verifyEmail API function when the component mounts\r\n    // Use the 'id' parameter from the URL\r\n    verifyEmail(id)\r\n      .then((response) => {\r\n        console.log(response.data); // Handle the response as needed\r\n        // Show toast message or redirect to login\r\n      })\r\n      .catch((error) => {\r\n        console.error(error); // Handle errors\r\n        // Show error message or redirect to an error page\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Your VerifyMessage component content */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyMessage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd;IACA;IACAO,WAAW,CAACD,EAAE,CAAC,CACZE,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACb,EAAA,CAtBID,aAAa;EAAA,QACFH,SAAS;AAAA;AAAAkB,EAAA,GADpBf,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}