{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationMessage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // You may want to fetch data from the server to determine if the email is verified\n    // For now, let's assume the email is verified\n    setMessage('Email has been verified. Please go back to login page.');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Go back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationMessage, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = VerificationMessage;\nexport default VerificationMessage;\nvar _c;\n$RefreshReg$(_c, \"VerificationMessage\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","VerificationMessage","_s","message","setMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst VerificationMessage = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // You may want to fetch data from the server to determine if the email is verified\r\n    // For now, let's assume the email is verified\r\n    setMessage('Email has been verified. Please go back to login page.');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"verification-message\">\r\n      <h2>{message}</h2>\r\n      <Link to=\"/login\">Go back to Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA;IACAQ,UAAU,CAAC,wDAAwD,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKK,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCN,OAAA;MAAAM,QAAA,EAAKH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBV,OAAA,CAACF,IAAI;MAACa,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACR,EAAA,CAfID,mBAAmB;AAAAW,EAAA,GAAnBX,mBAAmB;AAiBzB,eAAeA,mBAAmB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}