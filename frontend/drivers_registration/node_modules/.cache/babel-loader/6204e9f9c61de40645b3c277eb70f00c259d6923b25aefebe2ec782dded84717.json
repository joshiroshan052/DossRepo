{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\ForgetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { forgotPasswordApi } from '../apis/Api';\nimport { toast } from 'react-toastify';\nimport \"./ForgotPassword.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPassword = () => {\n  _s();\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\n  const handleForgotPasswordEmail = e => {\n    setForgotPasswordEmail(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      email: forgotPasswordEmail\n    };\n    forgotPasswordApi(data).then(res => {\n      if (res.data.success === true) {\n        toast.success(res.data.message);\n        // You can redirect the user to another page if needed\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n      toast.error('Internal server error');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-img2 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardf\",\n      children: [/*#__PURE__*/_jsxDEV(\"fp\", {\n        className: \"lock-icon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faLock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fh2\", {\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can reset your password here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"fpassInput\",\n          placeholder: \"Email address\",\n          value: forgotPasswordEmail,\n          onChange: handleForgotPasswordEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fbutton\",\n          type: \"submit\",\n          children: \"Send Confirmation Mail.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgetPassword, \"NGwQ1myz6wFXMLUsEcK795p10Ds=\");\n_c = ForgetPassword;\nexport default ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","useState","forgotPasswordApi","toast","FontAwesomeIcon","faLock","jsxDEV","_jsxDEV","ForgetPassword","_s","forgotPasswordEmail","setForgotPasswordEmail","handleForgotPasswordEmail","e","target","value","handleSubmit","preventDefault","data","email","then","res","success","message","error","catch","err","console","log","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/ForgetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { forgotPasswordApi } from '../apis/Api';\r\nimport { toast } from 'react-toastify';\r\nimport \"./ForgotPassword.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nconst ForgetPassword = () => {\r\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\r\n\r\n  const handleForgotPasswordEmail = (e) => {\r\n    setForgotPasswordEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      email: forgotPasswordEmail,\r\n    };\r\n\r\n    forgotPasswordApi(data)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          toast.success(res.data.message);\r\n          // You can redirect the user to another page if needed\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error('Internal server error');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"background-img2 d-flex justify-content-center\">\r\n      <div className=\"cardf\">\r\n        <fp className=\"lock-icon\"><FontAwesomeIcon icon={faLock} /></fp>\r\n        <fh2>Forgot Password?</fh2>\r\n        <p>You can reset your password here</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"fpassInput\"\r\n            placeholder=\"Email address\"\r\n            value={forgotPasswordEmail}\r\n            onChange={handleForgotPasswordEmail}\r\n          />\r\n          <button className=\"fbutton\" type=\"submit\">Send Confirmation Mail.</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}