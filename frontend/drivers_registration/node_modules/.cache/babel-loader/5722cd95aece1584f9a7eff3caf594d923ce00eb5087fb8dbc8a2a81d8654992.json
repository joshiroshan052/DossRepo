{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { verifyEmail } from '../apis/Api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationMessage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  useEffect(() => {\n    const verifyMail = async () => {\n      try {\n        const response = await verifyEmail(); // Assuming verifyEmail returns a promise\n\n        if (response.data.success) {\n          setMessage('Email has been verified. Redirecting to login page.');\n          toast.success('Email has been verified.');\n          navigate('/login'); // Use navigate instead of history.push\n        } else {\n          setMessage('Email verification failed. Please try again.');\n          toast.error('Email verification failed.');\n        }\n      } catch (error) {\n        console.error('Error verifying email:', error.message);\n        setMessage('Internal Server Error. Please try again later.');\n        toast.error('Internal Server Error.');\n      }\n    };\n    verifyMail();\n  }, [navigate]); // Add 'navigate' to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Go back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationMessage, \"V38RlWBQIiv7FH9o2HjQQWYQmKI=\", false, function () {\n  return [useNavigate];\n});\n_c = VerificationMessage;\nexport default VerificationMessage;\nvar _c;\n$RefreshReg$(_c, \"VerificationMessage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","verifyEmail","toast","jsxDEV","_jsxDEV","VerificationMessage","_s","message","setMessage","navigate","verifyMail","response","data","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { verifyEmail } from '../apis/Api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst VerificationMessage = () => {\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\r\n\r\n  useEffect(() => {\r\n    const verifyMail = async () => {\r\n      try {\r\n        const response = await verifyEmail(); // Assuming verifyEmail returns a promise\r\n\r\n        if (response.data.success) {\r\n          setMessage('Email has been verified. Redirecting to login page.');\r\n          toast.success('Email has been verified.');\r\n          navigate('/login'); // Use navigate instead of history.push\r\n        } else {\r\n          setMessage('Email verification failed. Please try again.');\r\n          toast.error('Email verification failed.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying email:', error.message);\r\n        setMessage('Internal Server Error. Please try again later.');\r\n        toast.error('Internal Server Error.');\r\n      }\r\n    };\r\n\r\n    verifyMail();\r\n  }, [navigate]); // Add 'navigate' to the dependency array\r\n\r\n  return (\r\n    <div className=\"verification-message\">\r\n      <h2>{message}</h2>\r\n      <Link to=\"/login\">Go back to Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,WAAW,CAAC,CAAC,CAAC,CAAC;;QAEtC,IAAIU,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;UACzBL,UAAU,CAAC,qDAAqD,CAAC;UACjEN,KAAK,CAACW,OAAO,CAAC,0BAA0B,CAAC;UACzCJ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtB,CAAC,MAAM;UACLD,UAAU,CAAC,8CAA8C,CAAC;UAC1DN,KAAK,CAACY,KAAK,CAAC,4BAA4B,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACP,OAAO,CAAC;QACtDC,UAAU,CAAC,gDAAgD,CAAC;QAC5DN,KAAK,CAACY,KAAK,CAAC,wBAAwB,CAAC;MACvC;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEL,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCb,OAAA;MAAAa,QAAA,EAAKV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBjB,OAAA,CAACL,IAAI;MAACuB,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACf,EAAA,CAjCID,mBAAmB;EAAA,QAENL,WAAW;AAAA;AAAAuB,EAAA,GAFxBlB,mBAAmB;AAmCzB,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}