{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\n// VerificationMessage.jsx\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { verifyEmail } from '../path-to-your-api-file/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationMessage = () => {\n  _s();\n  useEffect(() => {\n    // Fetch data from the server to determine if the email is verified\n    // For now, let's assume the email is verified\n\n    // Use the verifyEmail API function\n    verifyEmail().then(response => {\n      // Handle the response as needed\n      console.log(response.data);\n    }).catch(error => {\n      // Handle errors\n      console.error(error);\n    });\n\n    // Show toast message\n    toast.success('Email has been verified!', {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 3000 // Close the toast after 3 seconds\n    });\n\n    // Redirect to login page after 3 seconds\n    setTimeout(() => {\n      window.location.href = '/login'; // Navigate to login page\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email has been verified.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Go back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VerificationMessage;\nexport default VerificationMessage;\nvar _c;\n$RefreshReg$(_c, \"VerificationMessage\");","map":{"version":3,"names":["React","useEffect","Link","toast","verifyEmail","jsxDEV","_jsxDEV","VerificationMessage","_s","then","response","console","log","data","catch","error","success","position","POSITION","TOP_CENTER","autoClose","setTimeout","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["// VerificationMessage.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { verifyEmail } from '../path-to-your-api-file/api';\r\n\r\nconst VerificationMessage = () => {\r\n  useEffect(() => {\r\n    // Fetch data from the server to determine if the email is verified\r\n    // For now, let's assume the email is verified\r\n\r\n    // Use the verifyEmail API function\r\n    verifyEmail()\r\n      .then((response) => {\r\n        // Handle the response as needed\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors\r\n        console.error(error);\r\n      });\r\n\r\n    // Show toast message\r\n    toast.success('Email has been verified!', {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 3000, // Close the toast after 3 seconds\r\n    });\r\n\r\n    // Redirect to login page after 3 seconds\r\n    setTimeout(() => {\r\n      window.location.href = '/login'; // Navigate to login page\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"verification-message\">\r\n      <h2>Email has been verified.</h2>\r\n      <Link to=\"/login\">Go back to Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCP,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACAG,WAAW,CAAC,CAAC,CACVK,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;;IAEJ;IACAZ,KAAK,CAACa,OAAO,CAAC,0BAA0B,EAAE;MACxCC,QAAQ,EAAEd,KAAK,CAACe,QAAQ,CAACC,UAAU;MACnCC,SAAS,EAAE,IAAI,CAAE;IACnB,CAAC,CAAC;;IAEF;IACAC,UAAU,CAAC,MAAM;MACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKmB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCpB,OAAA;MAAAoB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCxB,OAAA,CAACJ,IAAI;MAAC6B,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCID,mBAAmB;AAAAyB,EAAA,GAAnBzB,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}