{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { resetPasswordApi } from \"../apis/Api\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const handleNewPassword = e => {\n    setNewPassword(e.target.value);\n  };\n  const handleResetPassword = () => {\n    const data = {\n      password: newPassword\n    };\n    resetPasswordApi(data, token).then(res => {\n      if (res.data.success) {\n        toast.success(res.data.message);\n        navigate(\"/\");\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.error(err);\n      toast.error(\"Internal server error\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control text-light\",\n      placeholder: \"Enter your new password\",\n      style: {\n        color: \"black\"\n      },\n      onChange: handleNewPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: handleResetPassword,\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ResetPassword, \"jEDTMMpG8xWcfC0PYdiITAZCfMI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","resetPasswordApi","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","navigate","token","newPassword","setNewPassword","handleNewPassword","e","target","value","handleResetPassword","data","password","then","res","success","message","error","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","placeholder","style","color","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { resetPasswordApi } from \"../apis/Api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const handleNewPassword = (e) => {\r\n    setNewPassword(e.target.value);\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    const data = {\r\n      password: newPassword,\r\n    };\r\n\r\n    resetPasswordApi(data, token)\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          toast.success(res.data.message);\r\n          navigate(\"/\");\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        toast.error(\"Internal server error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Your Reset Password UI */}\r\n      <label>Enter your new password</label>\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control text-light\"\r\n        placeholder=\"Enter your new password\"\r\n        style={{ color: \"black\" }}\r\n        onChange={handleNewPassword}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary\"\r\n        onClick={handleResetPassword}\r\n      >\r\n        Update Password\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAM,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,IAAI,GAAG;MACXC,QAAQ,EAAER;IACZ,CAAC;IAEDV,gBAAgB,CAACiB,IAAI,EAAER,KAAK,CAAC,CAC1BU,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACH,IAAI,CAACI,OAAO,EAAE;QACpBpB,KAAK,CAACoB,OAAO,CAACD,GAAG,CAACH,IAAI,CAACK,OAAO,CAAC;QAC/Bd,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLP,KAAK,CAACsB,KAAK,CAACH,GAAG,CAACH,IAAI,CAACK,OAAO,CAAC;MAC/B;IACF,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACH,KAAK,CAACE,GAAG,CAAC;MAClBxB,KAAK,CAACsB,KAAK,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBAEExB,OAAA;MAAAwB,QAAA,EAAO;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtC5B,OAAA;MACE6B,IAAI,EAAC,UAAU;MACfC,SAAS,EAAC,yBAAyB;MACnCC,WAAW,EAAC,yBAAyB;MACrCC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAC1BC,QAAQ,EAAEzB;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF5B,OAAA;MACE6B,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,mBAAmB;MAC7BK,OAAO,EAAEtB,mBAAoB;MAAAW,QAAA,EAC9B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACxB,EAAA,CAjDID,aAAa;EAAA,QACAR,WAAW,EACVC,SAAS;AAAA;AAAAwC,EAAA,GAFvBjC,aAAa;AAmDnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}