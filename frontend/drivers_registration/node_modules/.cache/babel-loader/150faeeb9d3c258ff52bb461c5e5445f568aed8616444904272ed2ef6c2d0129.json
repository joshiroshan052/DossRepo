{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// ResetPassword.js\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { resetPasswordApi } from \"../apis/Api\";\nimport { toast } from \"react-toastify\";\n\n// ... (imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const {\n    token\n  } = useParams();\n  const handleChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await resetPasswordApi({\n        password,\n        token\n      });\n      console.log('Response:', response.data);\n      toast.success(response.data.message);\n      // Optionally, you can redirect the user to the login page or another route\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      toast.error((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your new password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"vSfvIYQ+qnuzSvGGpsIGizJ9uTc=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useParams","resetPasswordApi","toast","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","token","handleChange","e","target","value","handleSubmit","preventDefault","response","console","log","data","success","message","error","_error$response","_error$response2","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/ResetPassword.jsx"],"sourcesContent":["// ResetPassword.js\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { resetPasswordApi } from \"../apis/Api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// ... (imports)\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const { token } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      \r\n        const response = await resetPasswordApi({ password, token });\r\n        console.log('Response:', response.data);\r\n        toast.success(response.data.message);\r\n        // Optionally, you can redirect the user to the login page or another route\r\n    \r\n    } catch (error) {\r\n      console.error('Error:', error.response?.data);\r\n      toast.error(error.response?.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your new password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEU;EAAM,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE7B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BH,WAAW,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMf,gBAAgB,CAAC;QAAEM,QAAQ;QAAEE;MAAM,CAAC,CAAC;MAC5DQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACvCjB,KAAK,CAACkB,OAAO,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAC;MACpC;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACdP,OAAO,CAACK,KAAK,CAAC,QAAQ,GAAAC,eAAA,GAAED,KAAK,CAACN,QAAQ,cAAAO,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,CAAC;MAC7CjB,KAAK,CAACoB,KAAK,EAAAE,gBAAA,GAACF,KAAK,CAACN,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,CAACE,OAAO,CAAC;IAC3C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAM0B,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3BrB,OAAA;QACE2B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,yBAAyB;QACrCnB,KAAK,EAAEN,QAAS;QAChB0B,QAAQ,EAAEvB;MAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtCID,aAAa;EAAA,QAECL,SAAS;AAAA;AAAAkC,EAAA,GAFvB7B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}