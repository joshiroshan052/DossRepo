{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\userDashboard\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotificationsApi, followUserApi } from \"../../apis/Api\";\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const socket = socketIOClient('http://localhost:5000'); // Connect to your Socket.IO server\n\n    socket.on('follow', data => {\n      // Handle follow notification received via socket\n      setNotifications([...notifications, data]);\n    });\n    return () => socket.disconnect(); // Disconnect socket on component unmount\n  }, [notifications]);\n  const handleFollowBack = async userId => {\n    try {\n      const response = await followUserApi(userId);\n      console.log(response.data.message); // Log success message\n      // If you need to update the UI after follow back, you can do it here\n      // For example, remove the followed notification from the list\n      setNotifications(notifications.filter(notification => notification.sender._id !== userId));\n    } catch (error) {\n      console.error(\"Error following back:\", error);\n      // Handle error\n    }\n  };\n\n  // Render UI to show notifications and follow-back button\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","getNotificationsApi","followUserApi","socketIOClient","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","socket","on","data","disconnect","handleFollowBack","userId","response","console","log","message","filter","notification","sender","_id","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/userDashboard/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getNotificationsApi, followUserApi } from \"../../apis/Api\";\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient('http://localhost:5000'); // Connect to your Socket.IO server\r\n\r\n    socket.on('follow', (data) => {\r\n      // Handle follow notification received via socket\r\n      setNotifications([...notifications, data]);\r\n    });\r\n\r\n    return () => socket.disconnect(); // Disconnect socket on component unmount\r\n  }, [notifications]);\r\n\r\n  const handleFollowBack = async (userId) => {\r\n    try {\r\n      const response = await followUserApi(userId);\r\n      console.log(response.data.message); // Log success message\r\n      // If you need to update the UI after follow back, you can do it here\r\n      // For example, remove the followed notification from the list\r\n      setNotifications(notifications.filter(notification => notification.sender._id !== userId));\r\n    } catch (error) {\r\n      console.error(\"Error following back:\", error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  // Render UI to show notifications and follow-back button\r\n\r\n  return (\r\n    <div>\r\n      {/* Your UI code to display notifications and follow-back button */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,gBAAgB;AACnE,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGP,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC;;IAExDO,MAAM,CAACC,EAAE,CAAC,QAAQ,EAAGC,IAAI,IAAK;MAC5B;MACAH,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEI,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,MAAMM,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACa,MAAM,CAAC;MAC5CE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACJ,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC;MACpC;MACA;MACAV,gBAAgB,CAACD,aAAa,CAACY,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACC,MAAM,CAACC,GAAG,KAAKR,MAAM,CAAC,CAAC;IAC5F,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;;EAED;;EAEA,oBACEnB,OAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}