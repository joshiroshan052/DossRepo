{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\VerificationMessage.jsx\",\n  _s = $RefreshSig$();\n// VerificationMessage.jsx\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationMessage = () => {\n  _s();\n  useEffect(() => {\n    // Fetch data from the server to determine if the email is verified\n    // For now, let's assume the email is verified\n\n    // Show toast message\n    toast.success('Email has been verified!', {\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 3000 // Close the toast after 3 seconds\n    });\n\n    // Redirect to login page after 3 seconds\n    setTimeout(() => {\n      window.location.href = '/login'; // Navigate to login page\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email has been verified.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Go back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VerificationMessage;\nexport default VerificationMessage;\nvar _c;\n$RefreshReg$(_c, \"VerificationMessage\");","map":{"version":3,"names":["React","useEffect","Link","toast","jsxDEV","_jsxDEV","VerificationMessage","_s","success","position","POSITION","TOP_CENTER","autoClose","setTimeout","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/VerificationMessage.jsx"],"sourcesContent":["// VerificationMessage.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst VerificationMessage = () => {\r\n  useEffect(() => {\r\n    // Fetch data from the server to determine if the email is verified\r\n    // For now, let's assume the email is verified\r\n\r\n    // Show toast message\r\n    toast.success('Email has been verified!', {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 3000, // Close the toast after 3 seconds\r\n    });\r\n\r\n    // Redirect to login page after 3 seconds\r\n    setTimeout(() => {\r\n      window.location.href = '/login'; // Navigate to login page\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"verification-message\">\r\n      <h2>Email has been verified.</h2>\r\n      <Link to=\"/login\">Go back to Login</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationMessage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCN,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACAE,KAAK,CAACK,OAAO,CAAC,0BAA0B,EAAE;MACxCC,QAAQ,EAAEN,KAAK,CAACO,QAAQ,CAACC,UAAU;MACnCC,SAAS,EAAE,IAAI,CAAE;IACnB,CAAC,CAAC;;IAEF;IACAC,UAAU,CAAC,MAAM;MACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCb,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjB,OAAA,CAACH,IAAI;MAACqB,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACf,EAAA,CAvBID,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAyBzB,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}