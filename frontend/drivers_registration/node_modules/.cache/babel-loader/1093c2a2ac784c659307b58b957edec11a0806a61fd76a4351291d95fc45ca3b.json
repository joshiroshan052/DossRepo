{"ast":null,"code":"// api.jsx\n\nimport axios from \"axios\";\nconst Api = axios.create({\n  baseURL: \"http://localhost:5000\",\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n});\nconst config = {\n  headers: {\n    \"authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n  }\n};\nconsole.log(config);\nexport const registerApi = data => Api.post(\"/api/user/register\", data);\nexport const loginApi = data => Api.post(\"/api/user/login\", data);\nexport const forgotPasswordApi = data => Api.post(\"/api/user/forgot/password\", data);\nexport const resetPasswordApi = (data, token) => Api.put(`/api/user/password/reset/${token}`, data);\nexport const updateUser = (userId, userData) => Api.put(`/api/user/update/${userId}`, userData);\n\n// Add License APIs\nexport const createLicenseApi = (formData, licenseId) => Api.post(`/api/license/create_license/${licenseId}`, formData);\nexport const getAllLicenseApi = licenseId => Api.get(`/api/license/get_license/${licenseId}`);\nexport const getAllLicensesApi = () => Api.get('/api/license/getAllLicenses');\nexport const getSingleLicenseApi = licenseId => Api.post(`/api/license/getSingle_license/${licenseId}`, null, config);\nexport const updateLicenseApi = (licenseId, licenseData) => Api.put(`/api/license/update_license/${licenseId}`, licenseData, config);\nexport const deleteLicenseApi = licenseId => Api.delete(`/api/license/delete_license/${licenseId}`, config);\nexport const updateLicenseStatusApi = (licenseId, data) => Api.put(`/api/license/updateStatus/${licenseId}`, data, config);\nexport const verifyEmail = userId => Api.get(`/verify?id=${userId}`);\nexport const getAllUserApi = () => Api.get('/api/admin/getAllUser');\nexport const loginAdmin = data => Api.post('/api/admin/adminLogin', data);\nexport const searchUserApi = data => {\n  const token = localStorage.getItem(\"token\");\n  const formData = new FormData();\n  for (let key in data) {\n    formData.append(key, data[key]);\n  }\n  return Api.post(\"/api/user/search\", formData, {\n    headers: {\n      \"authorization\": `Bearer ${token}`\n    }\n  });\n};\nexport const followUserApi = userId => {\n  return Api.get(`/api/user/follow/${userId}`, config);\n};\nexport const getAllFollowedUsersApi = userId => Api.get(`/api/user/followedUsers/${userId}`, config);\nexport const getAllFollowingUsersApi = userId => Api.get(`/api/user/followingUsers/${userId}`, config);\nexport const createBluebookApi = (data, userId) => Api.post(`/api/bluebook/create_bluebook/${userId}`, data);\nexport const getAllBluebooksApi = () => Api.get('/api/bluebook/getAllBluebook');\nexport const getSingleBluebookApi = bluebookId => Api.get(`/api/bluebook/get_bluebook/${bluebookId}`);\nexport const updateBluebookApi = (bluebookId, bluebookData) => Api.put(`/api/bluebook/update_bluebook/${bluebookId}`, bluebookData);\nexport const deleteBluebookApi = bluebookId => Api.delete(`/api/bluebook/delete_bluebook/${bluebookId}`);\nexport const updateBluebookStatusApi = (bluebookId, data) => Api.put(`/api/bluebook/updateStatus/${bluebookId}`, data, config);\nexport const getAllBluebookApi = userId => Api.get(`/api/bluebook/getAll/${userId}`);\n\n// Share bluebook API\nexport const shareBluebookApi = userId => Api.post(`/api/share/${bluebookId}`, config);\n\n// Get shared bluebooks for a user API\nexport const getSharedBluebooksApi = userId => Api.get(`/api/shared/${userId}`, config);","map":{"version":3,"names":["axios","Api","create","baseURL","withCredentials","headers","config","localStorage","getItem","console","log","registerApi","data","post","loginApi","forgotPasswordApi","resetPasswordApi","token","put","updateUser","userId","userData","createLicenseApi","formData","licenseId","getAllLicenseApi","get","getAllLicensesApi","getSingleLicenseApi","updateLicenseApi","licenseData","deleteLicenseApi","delete","updateLicenseStatusApi","verifyEmail","getAllUserApi","loginAdmin","searchUserApi","FormData","key","append","followUserApi","getAllFollowedUsersApi","getAllFollowingUsersApi","createBluebookApi","getAllBluebooksApi","getSingleBluebookApi","bluebookId","updateBluebookApi","bluebookData","deleteBluebookApi","updateBluebookStatusApi","getAllBluebookApi","shareBluebookApi","getSharedBluebooksApi"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/apis/Api.jsx"],"sourcesContent":["// api.jsx\n\nimport axios from \"axios\";\n\nconst Api = axios.create({\n    baseURL: \"http://localhost:5000\",\n    withCredentials: true,\n    headers: {\n        \"Content-Type\" : \"multipart/form-data\"\n    }\n});\n\nconst config = {\n  headers: {\n      \"authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n  },\n};\n\nconsole.log(config)\n\nexport const registerApi = (data) => Api.post(\"/api/user/register\", data);\nexport const loginApi = (data) => Api.post(\"/api/user/login\", data);\n\nexport const forgotPasswordApi = (data) => Api.post(\"/api/user/forgot/password\", data);\nexport const resetPasswordApi = (data, token) => Api.put(`/api/user/password/reset/${token}`, data);\nexport const updateUser = (userId, userData) => Api.put(`/api/user/update/${userId}`,userData)\n\n// Add License APIs\nexport const createLicenseApi = (formData,licenseId) => Api.post(`/api/license/create_license/${licenseId}`,formData)\nexport const getAllLicenseApi = (licenseId) => Api.get(`/api/license/get_license/${licenseId}`)\nexport const getAllLicensesApi = () => Api.get('/api/license/getAllLicenses')\nexport const getSingleLicenseApi = (licenseId) => Api.post(`/api/license/getSingle_license/${licenseId}`, null, config);\nexport const updateLicenseApi = (licenseId, licenseData) => Api.put(`/api/license/update_license/${licenseId}`, licenseData, config);\nexport const deleteLicenseApi = (licenseId) => Api.delete(`/api/license/delete_license/${licenseId}`, config);\nexport const updateLicenseStatusApi = (licenseId, data) =>Api.put(`/api/license/updateStatus/${licenseId}`, data, config);\n\n\nexport const verifyEmail = (userId) => Api.get(`/verify?id=${userId}`);\n\nexport const getAllUserApi = () => Api.get('/api/admin/getAllUser');\nexport const loginAdmin = (data) => Api.post('/api/admin/adminLogin', data);\n\nexport const searchUserApi = (data) => {\n  const token = localStorage.getItem(\"token\");\n  const formData = new FormData();\n  for (let key in data) {\n    formData.append(key, data[key]);\n  }\n  return Api.post(\"/api/user/search\", formData, {\n    headers: {\n      \"authorization\": `Bearer ${token}`,\n    },\n  });\n};\n\nexport const followUserApi = (userId) => {\n  return Api.get(`/api/user/follow/${userId}`,config);\n};\n\nexport const getAllFollowedUsersApi = (userId) => Api.get(`/api/user/followedUsers/${userId}`, config);\nexport const getAllFollowingUsersApi = (userId) => Api.get(`/api/user/followingUsers/${userId}`, config);\n\n\nexport const createBluebookApi = (data,userId) => Api.post(`/api/bluebook/create_bluebook/${userId}`, data);\nexport const getAllBluebooksApi = () => Api.get('/api/bluebook/getAllBluebook');\nexport const getSingleBluebookApi = (bluebookId) => Api.get(`/api/bluebook/get_bluebook/${bluebookId}`);\nexport const updateBluebookApi = (bluebookId, bluebookData) => Api.put(`/api/bluebook/update_bluebook/${bluebookId}`, bluebookData);\nexport const deleteBluebookApi = (bluebookId) => Api.delete(`/api/bluebook/delete_bluebook/${bluebookId}`);\nexport const updateBluebookStatusApi = (bluebookId, data) =>Api.put(`/api/bluebook/updateStatus/${bluebookId}`, data, config);\nexport const getAllBluebookApi = (userId) => Api.get(`/api/bluebook/getAll/${userId}`);\n\n// Share bluebook API\nexport const shareBluebookApi = (userId) => Api.post(`/api/share/${bluebookId}`, config);\n\n// Get shared bluebooks for a user API\nexport const getSharedBluebooksApi = (userId) => Api.get(`/api/shared/${userId}`, config);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}