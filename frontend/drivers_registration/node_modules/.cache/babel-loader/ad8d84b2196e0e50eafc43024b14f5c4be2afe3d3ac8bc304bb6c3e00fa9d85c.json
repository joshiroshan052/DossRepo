{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\userDashboard\\\\Notification.jsx\",\n  _s = $RefreshSig$();\n// NotificationPage.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { getNotificationsApi, followBackApi } from '../../apis/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notificationse = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const response = await getNotificationsApi();\n      setNotifications(response.data.notifications);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  const handleFollowBack = async followedUserId => {\n    try {\n      await followBackApi(followedUserId);\n      // Assuming you want to refresh notifications after follow-back\n      fetchNotifications();\n    } catch (error) {\n      console.error('Error following back:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [notification.senderId.firstName, \" \", notification.senderId.lastName, \" \", notification.type, \" you. \", notification.timestamp, notification.type === 'follow' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFollowBack(notification.senderId._id),\n          children: \"Follow Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, notification._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Notificationse, \"b5Z8U3/R7VRYC3BVdCsp3rDTxkc=\");\n_c = Notificationse;\nexport default NotificationPage;\nvar _c;\n$RefreshReg$(_c, \"Notificationse\");","map":{"version":3,"names":["React","useState","useEffect","getNotificationsApi","followBackApi","jsxDEV","_jsxDEV","Notificationse","_s","notifications","setNotifications","loading","setLoading","fetchNotifications","response","data","error","console","handleFollowBack","followedUserId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","senderId","firstName","lastName","type","timestamp","onClick","_id","_c","NotificationPage","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/userDashboard/Notification.jsx"],"sourcesContent":["// NotificationPage.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getNotificationsApi, followBackApi } from '../../apis/Api';\r\n\r\nconst Notificationse = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await getNotificationsApi();\r\n      setNotifications(response.data.notifications);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    }\r\n  };\r\n\r\n  const handleFollowBack = async (followedUserId) => {\r\n    try {\r\n      await followBackApi(followedUserId);\r\n      // Assuming you want to refresh notifications after follow-back\r\n      fetchNotifications();\r\n    } catch (error) {\r\n      console.error('Error following back:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notifications</h1>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map(notification => (\r\n            <li key={notification._id}>\r\n              {/* Display notification content here */}\r\n              {notification.senderId.firstName} {notification.senderId.lastName} {notification.type} you. {notification.timestamp}\r\n              {notification.type === 'follow' && (\r\n                <button onClick={() => handleFollowBack(notification.senderId._id)}>Follow Back</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,mBAAmB,CAAC,CAAC;MAC5CO,gBAAgB,CAACI,QAAQ,CAACC,IAAI,CAACN,aAAa,CAAC;MAC7CG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOC,cAAc,IAAK;IACjD,IAAI;MACF,MAAMf,aAAa,CAACe,cAAc,CAAC;MACnC;MACAN,kBAAkB,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBb,OAAO,gBACNL,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBlB,OAAA;MAAAc,QAAA,EACGX,aAAa,CAACgB,GAAG,CAACC,YAAY,iBAC7BpB,OAAA;QAAAc,QAAA,GAEGM,YAAY,CAACC,QAAQ,CAACC,SAAS,EAAC,GAAC,EAACF,YAAY,CAACC,QAAQ,CAACE,QAAQ,EAAC,GAAC,EAACH,YAAY,CAACI,IAAI,EAAC,QAAM,EAACJ,YAAY,CAACK,SAAS,EAClHL,YAAY,CAACI,IAAI,KAAK,QAAQ,iBAC7BxB,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACQ,YAAY,CAACC,QAAQ,CAACM,GAAG,CAAE;UAAAb,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACxF;MAAA,GALME,YAAY,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMrB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhDID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAkDpB,eAAe4B,gBAAgB;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}