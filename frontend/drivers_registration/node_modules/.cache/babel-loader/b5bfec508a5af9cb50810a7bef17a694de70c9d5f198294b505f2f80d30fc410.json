{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\userDashboard\\\\Notification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotificationsApi, followUserApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await getNotificationsApi();\n        setNotifications(response.data.notifications);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  const handleFollowBack = async userId => {\n    try {\n      const response = await followUserApi(userId);\n      console.log(response.data.message); // Log success message\n      // If you need to update the UI after follow back, you can do it here\n      // For example, remove the followed notification from the list\n      setNotifications(notifications.filter(notification => notification.sender._id !== userId));\n    } catch (error) {\n      console.error(\"Error following back:\", error);\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [notification.sender.firstName, \" \", notification.sender.lastName, \" followed you\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFollowBack(notification.sender._id),\n          children: \"Follow Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","getNotificationsApi","followUserApi","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","fetchNotifications","response","data","error","console","handleFollowBack","userId","log","message","filter","notification","sender","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","firstName","lastName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/userDashboard/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getNotificationsApi, followUserApi } from \"../api\";\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await getNotificationsApi();\r\n        setNotifications(response.data.notifications);\r\n      } catch (error) {\r\n        console.error(\"Error fetching notifications:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const handleFollowBack = async (userId) => {\r\n    try {\r\n      const response = await followUserApi(userId);\r\n      console.log(response.data.message); // Log success message\r\n      // If you need to update the UI after follow back, you can do it here\r\n      // For example, remove the followed notification from the list\r\n      setNotifications(notifications.filter(notification => notification.sender._id !== userId));\r\n    } catch (error) {\r\n      console.error(\"Error following back:\", error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Notifications</h2>\r\n      {notifications.length === 0 ? (\r\n        <p>No notifications</p>\r\n      ) : (\r\n        notifications.map((notification, index) => (\r\n          <div key={index}>\r\n            <p>\r\n              {notification.sender.firstName} {notification.sender.lastName} followed you\r\n              <button onClick={() => handleFollowBack(notification.sender._id)}>Follow Back</button>\r\n            </p>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,mBAAmB,CAAC,CAAC;QAC5CO,gBAAgB,CAACE,QAAQ,CAACC,IAAI,CAACJ,aAAa,CAAC;MAC/C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDH,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMR,aAAa,CAACa,MAAM,CAAC;MAC5CF,OAAO,CAACG,GAAG,CAACN,QAAQ,CAACC,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MACpC;MACA;MACAT,gBAAgB,CAACD,aAAa,CAACW,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACC,MAAM,CAACC,GAAG,KAAKN,MAAM,CAAC,CAAC;IAC5F,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACER,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBnB,aAAa,CAACoB,MAAM,KAAK,CAAC,gBACzBvB,OAAA;MAAAkB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEvBnB,aAAa,CAACqB,GAAG,CAAC,CAACT,YAAY,EAAEU,KAAK,kBACpCzB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,GACGH,YAAY,CAACC,MAAM,CAACU,SAAS,EAAC,GAAC,EAACX,YAAY,CAACC,MAAM,CAACW,QAAQ,EAAC,eAC9D,eAAA3B,OAAA;UAAQ4B,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACK,YAAY,CAACC,MAAM,CAACC,GAAG,CAAE;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC,GAJIG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}