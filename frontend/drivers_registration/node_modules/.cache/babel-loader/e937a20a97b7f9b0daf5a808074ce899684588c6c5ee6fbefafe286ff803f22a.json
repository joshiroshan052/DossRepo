{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\WEB_\\\\frontend\\\\drivers_registration\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { resetPasswordApi } from '../apis/Api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  match\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const handleChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if match and match.params exist before accessing them\n    if (match && match.params) {\n      const token = match.params.token;\n      resetPasswordApi({\n        password,\n        token\n      }).then(res => {\n        toast.success(res.data.message);\n        // Optionally, you can redirect the user to the login page or another route\n      }).catch(err => {\n        toast.error(err.response.data.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your new password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Y/4oil5yuJ8nKfSTE84bnqMxt48=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","resetPasswordApi","toast","jsxDEV","_jsxDEV","ResetPassword","match","_s","password","setPassword","handleChange","e","target","value","handleSubmit","preventDefault","params","token","then","res","success","data","message","catch","err","error","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/WEB_/frontend/drivers_registration/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { resetPasswordApi } from '../apis/Api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Check if match and match.params exist before accessing them\r\n    if (match && match.params) {\r\n      const token = match.params.token;\r\n\r\n      resetPasswordApi({ password, token })\r\n        .then((res) => {\r\n          toast.success(res.data.message);\r\n          // Optionally, you can redirect the user to the login page or another route\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response.data.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your new password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIT,KAAK,IAAIA,KAAK,CAACU,MAAM,EAAE;MACzB,MAAMC,KAAK,GAAGX,KAAK,CAACU,MAAM,CAACC,KAAK;MAEhChB,gBAAgB,CAAC;QAAEO,QAAQ;QAAES;MAAM,CAAC,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;QACbjB,KAAK,CAACkB,OAAO,CAACD,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;QAC/B;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdtB,KAAK,CAACuB,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACC,OAAO,CAAC;MACxC,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACElB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA;MAAM4B,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBAC3BvB,OAAA;QACE6B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,yBAAyB;QACrCrB,KAAK,EAAEL,QAAS;QAChB2B,QAAQ,EAAEzB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CAvCIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}